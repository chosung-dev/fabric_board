{
  "_args": [
    [
      "hasha@3.0.0",
      "/usr/src/npm/nyc"
    ]
  ],
  "_from": "hasha@3.0.0",
  "_id": "hasha@3.0.0",
  "_inBundle": false,
  "_integrity": "sha1-UqMvq4Vp1BymmmH/GiFPjrfIvTk=",
  "_location": "/nyc/hasha",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "hasha",
    "fetchSpec": "3.0.0",
    "name": "hasha",
    "raw": "hasha@3.0.0",
    "rawSpec": "3.0.0",
    "registry": true,
    "saveSpec": null,
    "type": "version"
  },
  "_requiredBy": [
    "/nyc/caching-transform",
    "/nyc/package-hash"
  ],
  "_resolved": "https://registry.npmjs.org/hasha/-/hasha-3.0.0.tgz",
  "_shrinkwrap": null,
  "_spec": "3.0.0",
  "_where": "/usr/src/npm/nyc",
  "author": {
    "email": "sindresorhus@gmail.com",
    "name": "Sindre Sorhus",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/hasha/issues"
  },
  "dependencies": {
    "is-stream": "^1.0.1"
  },
  "description": "Hashing made simple. Get the hash of a buffer/string/stream/file.",
  "devDependencies": {
    "ava": "*",
    "proxyquire": "^1.7.2",
    "xo": "*"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/sindresorhus/hasha#readme",
  "keywords": [
    "base64",
    "buffer",
    "crypto",
    "easy",
    "file",
    "fs",
    "hash",
    "hashing",
    "hex",
    "md5",
    "rev",
    "revving",
    "sha1",
    "sha256",
    "sha512",
    "simple",
    "stream",
    "string",
    "sum",
    "text"
  ],
  "license": "MIT",
  "name": "hasha",
  "optionalDependencies": {},
  "readme": "<h1 align=\"center\">\n\t<br>\n\t<br>\n\t<br>\n\t<img width=\"380\" src=\"https://rawgit.com/sindresorhus/hasha/master/media/logo.svg\" alt=\"hasha\">\n\t<br>\n\t<br>\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> Hashing made simple. Get the hash of a buffer/string/stream/file.\n\n[![Build Status](https://travis-ci.org/sindresorhus/hasha.svg?branch=master)](https://travis-ci.org/sindresorhus/hasha)\n\nConvenience wrapper around the core [`crypto` Hash class](https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm) with simpler API and better defaults.\n\n\n## Install\n\n```\n$ npm install --save hasha\n```\n\n\n## Usage\n\n```js\nconst hasha = require('hasha');\n\nhasha('unicorn');\n//=> 'e233b19aabc7d5e53826fb734d1222f1f0444c3a3fc67ff4af370a66e7cadd2cb24009f1bc86f0bed12ca5fcb226145ad10fc5f650f6ef0959f8aadc5a594b27'\n```\n\n```js\nconst hasha = require('hasha');\n\n// Hash the process input and output the hash sum\nprocess.stdin.pipe(hasha.stream()).pipe(process.stdout);\n```\n\n```js\nconst hasha = require('hasha');\n\n// Get the MD5 hash of an image\nhasha.fromFile('unicorn.png', {algorithm: 'md5'}).then(hash => {\n\tconsole.log(hash);\n\t//=> '1abcb33beeb811dca15f0ac3e47b88d9'\n});\n```\n\n\n## API\n\nSee the Node.js [`crypto` docs](https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm) for more about hashing.\n\n### hasha(input, [options])\n\nReturns a hash.\n\n#### input\n\nType: `Buffer` `string` `Buffer[]` `string[]`\n\nBuffer you want to hash.\n\nWhile strings are supported you should prefer buffers as they're faster to hash. Although if you already have a string you should not convert it to a buffer.\n\nPass an array instead of concatenating strings and/or buffers. The output is the same, but arrays do not incur the overhead of concatenation.\n\n#### options\n\n##### encoding\n\nType: `string`<br>\nDefault: `hex`<br>\nValues: `hex` `base64` `buffer` `binary`\n\nEncoding of the returned hash.\n\n##### algorithm\n\nType: `string`<br>\nDefault: `sha512`<br>\nValues: `md5` `sha1` `sha256` `sha512` *([Platform dependent](https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm))*\n\n*The `md5` algorithm is good for [file revving](https://github.com/sindresorhus/rev-hash), but you should never use `md5` or `sha1` for anything sensitive. [They're insecure.](http://googleonlinesecurity.blogspot.no/2014/09/gradually-sunsetting-sha-1.html)*\n\n### hasha.stream([options])\n\nReturns a [hash transform stream](https://nodejs.org/api/crypto.html#crypto_class_hash).\n\n### hasha.fromStream(stream, [options])\n\nReturns a `Promise` for a hash.\n\n### hasha.fromFile(filepath, [options])\n\nReturns a `Promise` for a hash.\n\n### hasha.fromFileSync(filepath, [options])\n\nReturns a hash.\n\n\n## Resources\n\n- [Hasha: A Friendly Crypto API • DailyJS](http://dailyjs.com/2015/06/12/hasha-a-friendly-crypto-api/)\n\n\n## Related\n\n- [hasha-cli](https://github.com/sindresorhus/hasha-cli) - CLI for this module\n- [hash-obj](https://github.com/sindresorhus/hash-obj) - Get the hash of an object\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/hasha.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "3.0.0"
}
